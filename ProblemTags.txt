Segment Tree: (range max/min/abs/gcd/lcm)
2407. Longest Increasing Subsequence II (H) (range query max)
300. Longest Increasing Subsequence
307. Range Sum Query (M) (range query sum)

Constructive problem:
1982. Find Array Given Subset Sums (construct two part. first part have x, sec part does not. Then divide and conquer)

Graph:
- brute force:
1761. Minimum Degree of a Connected Trio in a Graph 
         (loop of loop of loop check Trio. remove some edges to make sure we don't repeatly check this trio. n=400=>n^3/3)

Split to 2 - N:
886. Possible Bipartition (M) (dfs or bfs or union find. label them with color. Try to see the confliction. Graph might be not connect)
805. Split Array With Same Average (H) 
         (1. bitMask + meet in the middle 2. find a subset B, such that its sum and length satisfies this condition.)
416. Partition Equal Subset Sum
2035. Partition Array Into Two Arrays to Minimize Sum Difference (bitMask + meet in the middle)
1755. Closest Subsequence Sum (bitMask + meet in the middle)
1986. Minimum Number of Work Sessions to Finish the Tasks (subset sum dp + bitMask)

Heap:
1675. Minimize Deviation in Array (H) (Hint: each element have potential value. Start from global max to find the minimum difference)
632. Smallest Range Covering Elements from K Lists (H) (As same as 1675)
- Greedy:
   1383. Maximum Performance of a Team (nlogn. if we have to choose this person, we need to find k max speed. Suppose use each ele)
   2386. Find the K-Sum of an Array (have max sum subsequence. want to know 2rd large. sort + pq -> enumeration from min to max)
   2551. Put Marbles in Bags (H) (a_1 | a_2 ....... a_n-1 | a_n)
- Sweep Line:
   2251. Number of Flowers in Full Bloom (H) (Hint: Heap or (start, 1) (end, -1)))
   2402. Meeting Rooms III (H)

Monotonic Stack: (find first next/prev smaller/larger elements)
- Find the prev/next smaller/larger element:
   496. Next Greater Element I (M) (next larger. Increased order stack. Loop from right to left)
   503. Next Greater Element II (M) (next larger. Increased order stack. Loop from (right to left) *2)
   1019. Next Greater Node In Linked List (M) (reverse list first)
   739. Daily Temperatures (M) (store index)
   42. Trapping Rain Water (H) (decreasing stack, update res when meeting larger element)
   84. Largest Rectangle in Histogram (H) (increasing stack, update res when meeting smaller element)
   907. Sum of Subarray Minimums (H) (find the previous smaller ele. found the next smaller ele. avoid repeated subarray </<=)
   2104. Sum of Subarray Ranges (M)
   ((Can be used one loop for both prev/next)find the prev/next smaller ele. found the prev/next larger ele. avoid repeated subarray </<=)
   2281. Sum of Total Strength of Wizards (H) (prev/next smaller ele. + sumOfSum. Math Formula Derivation)
   1950. Maximum of Minimum Values in All Subarrays (H-) (find the previous/next smaller ele)
   1966. Binary Searchable Numbers in an Unsorted Array (M) (find prev larger and next smaller)
   1063. Number of Valid Subarrays (find next smaller ele.)
   1944. Number of Visible People in a Queue (H) (find next larger ele. right->left. decreasing order stack)
   1793. Maximum Score of a Good Subarray (H) (Can use mono. but also can use greedy with two pointer)
   2444. Count Subarrays With Fixed Bounds (H)
- form (lexicographically) smallest sequence( greedy) (note: it's smallest sequence some char you can't move 316. maintain the final res in stack): 
   316. Remove Duplicate Letters (H) 
   (Hint: stack used to form the smallest sequence. hard to think of. for loop to construct Map to store the last occurrence of    
   the char to check if we have this char remaining. Set to store seen. loop from left to right)
   1081. Smallest-Subsequence-of-Distinct-Characters (M) (same as 316)
   402. Remove K Digits (M) (loop the string, maintain an increasing mono stack, after loop still have k stack poll peek)
   1673. Find the Most Competitive Subsequence (M) (Same as 402)
   321. Create Maximum Number (H) (Same as 402. multiple k. find largest)
   2030. Smallest K-Length Subsequence With Occurrences of a Letter (H) (Similar to 316)
   (Hint: add a new constraint: number of repetition letter we can remove)
- form increasing/decreasing order stack dynamically:
   2289. Steps to Make Array Non-decreasing (H) (Hint: maintain decreasing from left to right) (hard to understand)
   768. Max Chunks To Make Sorted II (H) (ensure the max of each chunk are increasing. offer curChunkMax)
   901. Online Stock Span (M) 
   (Hint: maintain a decreasing order stack to get consecutive days for which the stock price was less than or equal to today's price.)
   255. Verify Preorder Sequence in Binary Search Tree (M) 
   (Hint: decreasing stack. Maintain a lowerbound. Any ele after should larger than the lowerbound. … {a[xxxxxx][yyyyyy]} …c => a < c)
- form increasing/decreasing order stack completely (global): (hard to understand)
    (Find the furthest larger/smaller element) (global stack+reverse for loop)
    962. Maximum Width Ramp (M) (form the decreasing mono stack first globally and loop from right->left and pop stack if not valid.)
    1124. Longest Well-Performing Interval (H) (initial sum 0) (prefix sum => same as 962)
(1,3) (2,4) are similar

Stack:
- General:
735. Asteroid Collision (M)
2434. Using a Robot to Print the Lexicographically Smallest String (M) (greedy) (next smallest array)
- Parse expression:
726. Number of Atoms (H) (Hint: remove parentheses. think about how to deal with the situation that cur char == '(' or ')' in stack)
772. Basic Calculator III (H)

String:
- left/right diffusion:
  2262. Total Appeal of A String (H) (Similar to 828. Unique char. track current char contribute how many scores to the result. only left)
  828. Count Unique Characters of All Substrings of a Given String (H) 
  (Hint: left and right prev/next repeated char. 找prev smaller/larger => monotonic stack (907))
- Next Greater Element:
   556. Next Greater Element III (M) 
   (Hint: from right to left find the first decresing ele. then find the prev larger ele. (like mono stack) swap it. sort (i, s.length()))
   1842. Next Palindrome Using Same Digits (H) (Same as 556)

Binary Search:
- Hard to realize:
1488. Avoid Flood in The City (greedy + bs/treeset. Find available day in the interval. Keep track the prev day that filled the lake)
1231. Divide Chocolate (H) (bs + greedy since order matters. Hint: 10^4 probably want nlogn solution or constant*n)
- General:
2560. House Robber IV (M)
1482. Minimum Number of Days to Make m Bouquets (M)
1552. Magnetic Force Between Two Balls (M)
875. Koko Eating Bananas (M)
826. Most Profit Assigning Work (M)
274. H-Index II
- Find K-th Element: (usually PQ, BS, Quick Select)
878. Nth Magical Number (H) (f(x) = L/A + L/B - L/lcm(A, B))
1201. Ugly Number III (H count(M) = M/a+M/b+M/c-M/lcm(a,b)-M/lcm(a,c)-M/lcm(b,c)+M/lcm(lcm(a,b),c); 容斥原理)
- 2D: (calculate x and y separately)
302. Smallest Rectangle Enclosing Black Pixels (H) (mlogn+nlogm)

Greedy:
2561. Rearranging Fruits (H)
2457. Minimum Addition to Make Integer Beautiful (M)
1733. Minimum Number of People to Teach (M)
765. Couples Holding Hands (H) (1. cyclic swapping 2. loop)
1864. Minimum Number of Swaps to Make the Binary String Alternating (M)
2178. Maximum Split of Positive Even Integers (M) (Math)
1326. Minimum Number of Taps to Open to Water a Garden (H) (interval sort by start.)
Longest Binary Subsequence Less Than or Equal to K (M) (right -> left take 1. and take all 0)
330. Patching Array (H) (consider the imapct for the smallest missed number)
1231. Divide Chocolate (bs + greedy since order matters)
- Median/Weighted Median: (use median to minimize sum{abs(xi-p)} or sum{abs(xi-p)*cost[i]})
   296.Best-Meeting-Point (M+)
   462.Minimum-Moves-to-Equal-Array-Elements-II
   2033.Minimum-Operations-to-Make-a-Uni-Value-Grid (M+)
   1703.Minimum-Adjacent-Swaps-for-K-Consecutive-Ones (H)
   1478.Allocate-Mailboxes (H)
   2448.Minimum-Cost-to-Make-Array-Equal (H-)
   1131.Maximum-of-Absolute-Value-Expression (H)
   1515.Best Position for a Service Centre (TBD)
   1956.Minimum-Time-For-K-Virus-Variants-to-Spread (H+)
- Heap:
   1383. Maximum Performance of a Team (nlogn. if we have to choose this person, we need to find k max speed)
- Work backword (usually ask if u can reach to the destination but bfs/dfs is time comsuming):
    780. Reaching Points (H) (work backwords. x - ky = x % y. kx + y = a => (a-y)%x == 0)
- lexicographically:
    2434. Using a Robot to Print the Lexicographically Smallest String (M) (next smallest array to record if there's a smallest value next)
    955. Delete Columns to Make Sorted II (M+) (record the prev successful states. )
    2182. Construct String With Repeat Limit (M) (greedy build string+ treeMap.)
    1663. Smallest String With A Given Numeric Value(M)

DFS: (sometime too large to use dfs: 2^40. Double dfs or Meet in the middle + bitmask)
1240. Tiling a Rectangle with the Fewest Squares (H)
1774. Closest Dessert Cost (enumeration)
37. Sudoku Solver (H) (9^(9*9) -> (9!)^9)
248. Strobogrammatic Number III (H)
1088. Confusing Number II (H) (same as 248. record cur and rev check if cur !+ rev)
- Evaluate Expressions:
679. 24 Game (H) (We use preision double epsilon = 1e-6 to handle the real division than /)
- Memo:
2400. Number of Ways to Reach a Position After Exactly k Steps (M)
756. Pyramid Transition Matrix (M) (cache a layer string if that leads to a false answer. memo every sub-pyramid)
2267. Check if There Is a Valid Parentheses String Path 
(dfs + memo(visited[x][y][val]) or bfs +memo(HashSet<>[x][y], if in HashSet do not add to queue))
    - Top-down dp: (4-dirs dfs + memo. 2 dirs might bottom up)
       Find path in 2-D array:
       329. Longest Increasing Path in a Matrix (H) (cache[i][j]. Since it's incresing, there will be no cycle)
       2328. Number of Increasing Paths in a Grid (H) 
       (cache[i][j] += cache[][] 4 dirs represents that the number of valid path that use i, j as start point) 
- Hidden Matrix:
489. Robot Room Cleaner (H) (Hint: Clockwise from the right. Order matters. (dirs[(d+i)%4]))
302. Smallest Rectangle Enclosing Black Pixels (H) (DFS visited[][] no need backtracking.)
- Simulation:
2069. Walking Robot Simulation II (M) (steps % total)
2056. Number of Valid Move Combinations On Chessboard (H) (Simulation. choose direction and steps. handle collision and stop)
- Pruning:
2065. Maximum Path Quality of a Graph (H) (本题的一个剪枝技巧是，先预处理起点 00 到其余节点的最短路，在搜索时提前判断下一个节点在走最短路的前提下能否在 \textit{maxTime}maxTime 时间内回到起点 00，若不能则不进行递归)

BFS:
- General:
   1625. Lexicographically Smallest String After Applying Operations (M)
   818. Race Car (H) (Hint: minimum path/steps. Avoid segment tree. Easy life)
   1284. Minimum Number of Flips to Convert Binary Matrix to Zero Matrix (H) (Hint: bfs and use bitmask to do the enumeration)
   815. Bus Routes (Build graph)
   928. Minimize Malware Spread II (find single source Malware node)
- Start with Multi-Node: 
   286. Walls and Gates (M)
- Optimization:
   1345. Jump Game IV (H) (optimization ways: 1. visited boolean[] 2. remove the key from map 3. pruning when you add ele to map)
   - Memo:
   (dfs + memo(visited[x][y][val]) or bfs +memo(HashSet<>[x][y], if in hashset do not add to queue))
   - Bi-direction: (five sets: q1, q2, visited, list, nextSet. each loop using the small size q in q1 and q2)
    127. Word Ladder (H) 
    752. Open the Lock (M)
   - Pruning:
    854. K-Similar Strings (每次交换至少对齐一个字母，没有对齐字母的操作是没意义的. 每次把第一个不一样的找出来. try to swap with 后面与B中当前元素相同的A中元素)
- Multi-state:
   1293. Shortest Path in a Grid with Obstacles Elimination (H). (Hint: k as the third dimension) pq<x, y, k> visited[x][y][k] k=160
   847. Shortest Path Visiting All Nodes (H) (visited[cur_node][set of previous_node represent by bitMask]. Initial state: every node)
- Dijkstra:
   - 778. Swim in Rising Water (BFS + PQ or Binary Search + BFS or MST) 
   - 407. Trapping-Rain-Water-II
   - Multi-state: 
   2290. Minimum Obstacle Removal to Reach Corner (H) pq<x, y, k> visited[x][y]
   1368. Minimum Cost to Make at Least One Valid Path in a Grid (H) (can bfs too)(pq<x, y, k> visited[x][y]. Mark as visited when pq poll)

Tree:
- General:
   - 654. Maximum Binary Tree (M) (dfs, form Cartesian Tree. do an in-order traversal, we get the array back which we used to create it)
- Multi-DFS:
   - 2458. Height of Binary Tree After Subtree Removal Queries 
     (record height, depth and the height for rest of branchs. how to count height for rest branch: need right node then check from root.left node) (H)
- Serialize and Deserialize: 
   - 297. Serialize and Deserialize Binary Tree (H) (dfs, split by ",")
   - 428. Serialize and Deserialize N-ary Tree (H) (dfs, split by ",", since it's N-ary, need to store children size)
   - 449. Serialize and Deserialize BST (M) 
      (preorder for BST. Maintain curMin and curMax. the subtree node must under the curRoot. … {a[xxxxxx][yyyyyy]} …)
   - 431. Encode N-ary Tree to Binary Tree (H) (for every node, set first child as left node and the rest add to the child's right one by one)
- Iteration: 
    - Inorder:
   230. Kth Smallest Element in a BST (M) 
   (Inorder iteration. stack + curNode. while (cur != null || !stack.isEmpty)=>cur!=null,cur=cur.left,else cur=stack.poll().right)
   173. Binary Search Tree Iterator (Inorder)
   - Inorder to postorder:
   1597. Build Binary Expression Tree From Infix Expression (H) 
    (Traverse by preorder from right to left. find last '+'/'-' which is first root. 2. in-order transfer to post-order)
    772. Basic Calculator III
    1612. Check If Two Expression Trees are Equivalent
- LCA:
   2096. Step-By-Step Directions From a Binary Tree Node to Another (M)
- DFS timestamp/in-out time: (Given a lot of pair<node1, node2> Determine if a node is the root of another node. )
   2322. Minimum Score After Removals on a Tree (H) (Hint: prefix XOR: sub = total^rest)
- Pseudotree
   2127. Maximum Employees to Be Invited to a Meeting (pseudotree + topological sort(find cycle) + case discussion)
   2360. Longest Cycle in a Graph (H) (dfs timestamp to find cycle)
   2359. Find Closest Node to Given Two Nodes (M) (dfs + hashset)

Math:
- Formula: 
2412. Minimum Money Required Before Transactions (H) 
          (InitialMoney - sum(diff_j) >= cost_i always be true. case1: cost_i from diff_i > 0. Case 2: from diff_i < 0)
- Prime:
- 204. Count Primes (greedy)
- Find prime factors of n: Sieve of Eratosthenes algorithm (greedy)
- 2338. Count the Number of Ideal Arrays (H) (Prime factorization + combine all prime factors of x in n: dp[i][j] += dp[i][j-t] represent     use j same prime factor in first i)
- Bit Operation:
   - BitWise AND/OR: 
   898. Bitwise ORs of Subarrays (enumerate all subarray: Frontier Set)
   2411. Smallest Subarrays With Maximum Bitwise OR (sliding window + map[32bit])
   2401. Longest Nice Subarray (M) (Sliding window. Or using xor to do sliding window. Using And to record repeated 1)
   2275. Largest Combination With Bitwise AND Greater Than Zero (M) (count max 1 among 32 bit array)
   2044. Count Number of Maximum Bitwise-OR Subsets (M) (dfs)
   2354. Number of Excellent Pairs (H) ((bitCount(a&b) + bitCount(a|b)) = bitCount(a) + bitCount(b))
   - XOR:
      2128. Remove All Ones With Row and Column Flips (M) (Hint: Mutually exclusive, think about xor)
   - BitMask (dfs can work too why we need bitmask to do enumeration. Constraint <= 2^32):
      2157. Groups of Strings (H) 
       (bitMask + union-find. BitMask 26 represent the string. union find on bitMask. use size to records repeat bitMask)
      1284. Minimum Number of Flips to Convert Binary Matrix to Zero Matrix (H) (Hint: use bitmask to do the enumeration)
      2151. Maximum Good People Based on Statements (H) (Hint: use bitmask to do the enumeration. optimize by Gosper's Hack)
      1601. Maximum Number of Achievable Transfer Requests (H) (same ase 2151. can use dfs too)
      1239. Maximum Length of a Concatenated String with Unique Characters (same as 2151)
      2135. Count Words Obtained After Adding a Letter (Hint: use 26bits bitmask to represent the str: 011010101....101)
      - Meet in the middle: (bitmask only can do 2^32. If we have 2^40, split to two array)
      805. Split Array With Same Average (H) (bitMask + meet in the middle)
      1755. Closest Subsequence Sum (H)
      2035. Partition Array Into Two Arrays to Minimize Sum Difference (H) (sort in advance) (Bipartite)
- Geometry:
      - Pan, rotation, reflection:
      694. Number of Distinct Islands (Pan. Set<Set<Pair<row, col>>>)
      711. Number of Distinct Islands II (H)
  2013. Detect Squares (M) (Hint: Use Diagonals to Determine Unique Squares)
  447. Number of Boomerangs (E)
  835. Image Overlap (enumeration. sliding window in 2-D)
  - Matrix Manipulation:
     289.  Game of Life (M) (How to updated simultaneously. 根据规则做标记)
- Base 9/26:
      660. Remove 9 (H) (Hint: API: Integer.parseInt(Integer.toString(n, 9)))
      168. Excel Sheet Column Title (Manually: n%26, n/=26)
- Find Rules/Pattern:
      423. Reconstruct Original Digits from English (M)
      2310. Sum of Numbers With Units Digit K (M) (n*k + a * 10 = num => (num - n * k) % 10 == 0)
      927. Three Equal Parts (H)
- Arithmetic sequence: 
      829. Consecutive Numbers Sum
- Greatest Common Divisor/Least Common Multiple: 
     1250. Check If It Is a Good Array (H) (裴蜀定理)
     2344. Minimum Deletions to Make Array Divisible (H) (gcd(a, b, c, d ...))
     2183. Count Array Pairs Divisible by K (H) (a * b % k == 0 => gcd(a, k) * gcd(b, k) % k == 0)
     (The natural number with the most divisors within 1e5 is 83160, which has only 128 factors)
     2280. Minimum Lines to Represent a Line Chart (M. using gcd(a,b) to calculate k. reduction of a fraction)
     2197. Replace Non-Coprime Numbers in Array
     878. Nth Magical Number (H) (f(x) = L/A + L/B - L/lcm(A, B))
     1201. Ugly Number III (H count(M) = M/a+M/b+M/c-M/lcm(a,b)-M/lcm(a,c)-M/lcm(b,c)+M/lcm(lcm(a,b),c); 容斥原理)
- SumOfSum:
     2281. Sum of Total Strength of Wizards (H) 
     (prev/next smaller ele. + sumOfSum. Math Formula Derivation. Calculate total sum of all subarray in an range)
- Accelerate by mod when x + ky (k = 1, 2, 3, ...)
    780. Reaching Points (H) (work backwords. x - ky = x % y.  kx + y  = a => (a-y)%x == 0)
- division:
    2435. Paths in Matrix Whose Sum Is Divisible by K (H) (To determine (a+b)%k, we can use (a%k + b%k))
    679. 24 Game (H) (We use preision double epsilon = 1e-6 to handle the real division than /)
    1015. Smallest Integer Divisible by K (M) (x1=K*q+r. x2=10*x1+1= 10r+1 (mod K). 求小数除法判断是否能整除或者有循环节. 不断地更新r=(10r+1)%K，查看结果是否会出现r=0)
- Math.pow: 
   902. Numbers At Most N Given Digit Set (H)
   - exponentiating by squaring (Fast Modulo Multiplication 快速幂)
     2550. Count Collisions of Monkeys on a Polygon (M)
- Permutation/combination:
   2147. Number of Ways to Divide a Long Corridor (H)
   1359. Count All Valid Pickup and Delivery Options (H) (permutation: decide pickup order and put order to the place)
   2338. Count the Number of Ideal Arrays (H) 
   (combine all prime factors of x in n: dp[i][j] += dp[i][j-t] represent use j same prime factor in first i)
- Prefix XOR:
   Minimum Score After Removals on a Tree (H) (Hint: prefix XOR: sub = total^rest)
- Perimeter:
    463. Island Perimeter (hint: instead of checking 4 dris, check left and top)
- Enumeration + preprocessing:
    2552. Count Increasing Quadruplets (H) (Quadruplets -> two pairs. dp[][] memoriazation)

DP:
- Didn't realize dp:
920. Number of Music Playlists (H) (Hint: dp[i][j] += dp[i-1][j]*(j-k). dp[i][j] += dp[i-1][j-1]*(n-j+1))
799. Champagne Tower (M) (simulation, dp[row] += (dp[row-1]-1.0)/2.0)
940. Distinct Subsequences II (H) (dp[i] = dp[i-1] * 2 - dp[last[x]-1])
- Combination/Enumeration dp:
2338. Count the Number of Ideal Arrays (H) (Prime factorization + combine all prime factors of x in n: dp[i][j] += dp[i][j-t] represent use j same prime factor in first i)
- General:
     - Optimize State Transform Function (might be Eliminate max/min by maintain max/min in the loop)
     Partition Array for Maximum Sum (M) (update curMax in the loop)
     188. Best Time to Buy and Sell Stock IV(H) (optimize by keep tracking the local max)  (dp[i][j] = Math.max(dp[i][j - 1], dp[i - 1][k] +      
      (prices[j] - prices[k]) k from 0 to j - 1) -> dp[i][j] = Math.max(dp[i][j - 1], prices[j] + max(dp[i - 1][k] - prices[k])))
     1937. Maximum Number of Points with Cost (M) (分情况讨论)
              (Hint: Eliminate Math.abs(k, j), discuss k>j and k<j => for loop and reverse for loop. Max(j+k) = max(j) + max(k).)
     - Optimize by Binary Search:
     1235. Maximum Profit in Job Scheduling (H) (dp[i] repressents that the maximmumm profit we can get that using first job i)
      (dp[I] = Math.max(dp[k] + curProfit, dp[i-1]). k choose by binary search and keep narrow down)
      - Optimize by Data Structure (e.g. range query min/max/sum) (Segment Tree or Mono Stack):
      2407. Longest Increasing Subsequence II (H) (dp[i] = max(dp[j] i-k <= j < i)) 
- Time series I:
926. Flip String to Monotone Increasing(M) (Multiple states for dp[i-1])
122. Best Time to Buy and Sell Stock II (M) (dp[i][k])
123. Best Time to Buy and Sell Stock III (H)
188. Best Time to Buy and Sell Stock IV (H)
- Time series II:
2430. Maximum Deletions on a String (H) (lcs[i][j] + dp[i] = max(dp[j] + 1))
1043. Partition Array for Maximum Sum (M)
1416. Restore The Array (H) (last cut problem)
2369. Check if There is a Valid Partition For The Array (M) (dp[i] = related to (dp[i-1], dp[i-2], dp[i-3]))
2370. Longest Ideal Subsequence (M) (dp[i] related to array[j]. cur - k < j < cur + k)
2312. Selling Pieces of Wood (H) 
(last cut in 2-D. cut by horizontal: dp[i][j] = max(for(k=0, i) dp[i-k][j]+dp[k][j]). by vertical: max(dp[i][j] = for(k=0, j) dp[i][j-k]+dp[i][k]))
2266. Count Number of Texts (M) (dfs -> dp: dp[I] = dp[i-1] or dp[i-2] or dp[i-3], how to count same char by using dp)
1218. Longest Arithmetic Subsequence of Given Difference (M) (dp[I] = dp[i-k] + 1. Map to find k)
1235. Maximum Profit in Job Scheduling (H) (dp[I] = dp[k] + curProfit. k choose by binary search and keep narrow down)
264. Ugly Number II (H) (Math.min(dp[p1]2, Math.min(dp[p2]3, dp[p3]*5)))
740. Delete and Earn (M) (dp[i] = Math.max(dp[i-2] + i*array[i], dp[i-1]);)
1143. Longest Common Subsequence (dp[i][j] = Math.max(dp[i-1][j],dp[i][j-1]))
- Interval I: dp[k][i] -> k is interval (consider last interval dp[k-1][j]) (arrange/assign n to k)
2478. Number of Beautiful Partitions (H)
2463.Minimum-Total-Distance-Traveled (H)
TODO: 1478.Allocate-Mailboxes (H)
664. Strange Printer (H) (dp[i][j] = dp[i][k] + dp[k+1][j])
- Interval II:
44. Wildcard Matching (H) (dp[i][j] = dp[i][j - 1] || dp[i - 1][j] or dp[i][j] = dp[i - 1][j - 1])
- bitmask dp:
2305. Fair Distribution of Cookies (H) (constraint small: dfs. large: dp. if ((x&j) == x) dp[i][j] = Math.min(dp[i][j], Math.max(dp[0][x], dp[i-1][j^x]));)
1723. Find Minimum Time to Finish All Jobs (equals to 2305. dfs or bs + dfs )
   - Enumerate subset using bitmask:
   1655. Distribute Repeating Integers (H) (dp[i][state] = dp[i-1][subset] + (subset satisified some conditions))
   - base 3 bitmask dp:
   2172. Maximum AND Sum of Array (H) (Hint: three states => base 3)
- backpack: (#num of constraints & 2D -> 1D space / time. for loop from right to left)
416. Partition Equal Subset Sum (M) (one constraint: sum. 2D -> 1D space. i only related to i-1. for loop from right to left.)
805. Split Array With Same Average (H) (also can use bitMask+meet in the midel / dfs) (two constraints: sum and num. 2D -> 1D time) 
         (hint: dp[i][count][sum] = dp[i-1][count-1][sum-nums[i]]. i only related to i-1. => dp[count][sum] )
- backpack variation:
1639. Number of Ways to Form a Target String Given a Dictionary
2218. Maximum Value of K Coins From Piles
- digit dp: (time complex: #state * #transition)
2376. Count Special Integers (H) (f(index, mask, islimit, isNumber), memo[index][mask] only for !isLimit && isNumber)
902. Numbers At Most N Given Digit Set (H) (f[index, isLimit, isNumber], memo[index] only for !isLimit && isNumber)
357. Count Numbers with Unique Digits (M) (same as 2376)
600. Non-negative Integers without Consecutive Ones (H) 
         (f(index, isOne, isLimit). dp[index][0 or 1] only for !isLimit. for loop binary representation insteda of base 10.)
1012. Numbers With Repeated Digits (H) (same as 2376)
1067. Digit Count in Range (H) (f(int index, int count, boolean isLimit, boolean isNumber). dp[index][count] for !isLimit && isNumber)
1397. Find All Good Strings (H) (digit dp + KMP. No need to memorize KMP so far)
- Subet sum dp (子集dp) (BitMask)
1986. Minimum Number of Work Sessions to Finish the Tasks (M) (subset sum dp + bitMask)
1655. Distribute Repeating Integers (H) (dp[i][state] = dp[i-1][subset] + (subset satisified some conditions))

Topological Sort:
2115. Find All Possible Recipes from Given Supplies (M)
    - find cycle in graph / find max single path end at node i:
    2127. Maximum Employees to Be Invited to a Meeting (pseudotree + topological sort(find cycle) + case discussion)

Map/Set:
- HashMap/HashSet:
2007. Find Original Array From Doubled Array
1554. Strings Differ by One Character (M) (Hint: change char to '*' to see duplicate)
1010. Pairs of Songs With Total Durations Divisible by 60 (M) (Two sum 变种)
923. 3Sum With Multiplicity (3 sum)
1396. Design Underground System(M) (start+"#"+end)
1604. Alert Using Same Key-Card Three or More Times in a One Hour Period (M)
525. Contiguous Array (M)
1452. People Whose List of Favorite Companies Is Not a Subset of Another List (M) 
          (brute force. Can't use bitmask since contraint is 500. Integer only have 2^32)
- TreeMap/TreeSet:
Binary Search:
1744. Avoid Flood in The City (greedy + bs/treeset)
Interval split and merge:
2382. Maximum Segment Sum After Removals (time reverse. split -> merge)
2034. Stock Price Fluctuation (Hint: deduplication in TreeSet is using compareTo not hashCode and equals like HashSet)
352. Data Stream as Disjoint Intervals (H) (Hint: merge interval by streaming. like sweep line)
2158. Amount of New Area Painted Each Day(H) (Hint: merge interval and count overlap dynamically. Treemap or sweep line. (1, -1) + TreeSet. Why not using treeMap<start, end> because we need end to update the curEnd)
2276. Count Integers in Intervals (H) (same as 2158. Try tree Map: https://leetcode.com/problems/count-integers-in-intervals/discuss/2039706/Merge-Intervals. Elegant: if have overlap update the left and right. Use this one as an example)
895. Maximum Frequency Stack (H) (No need to delete when push. We still want lower freq record in list)

Sweep Line: (more like traverse by timeline)
2402. Sweep Line (H)
2251. Number of Flowers in Full Bloom (H) (Hint: Heap or (start, 1) (end, -1)))
253. Meeting Rooms II (M) (Hint: (start, 1) (end, -1) calculate the number of overlaps at some point)
1229. Meeting Scheduler (M) (Hint: (start, 1) (end, -1) calculate the number of overlaps at some point)
759. Employee Free Time (H) (Hint: upgrade 1229. (start, 1) (end, -1) calculate the number of overlaps at some point for n people)
218. The Skyline Problem (H) (Hint: (start, height) (end, -height) traverse by timeline and using heap record the overlap maximum height)
986. Interval List Intersections (M) (Hint: == 1229. also can use two pointers)
56. Merge Interval (M)
57. Insert Interval (M)
1272. Remove Interval (M)
218. The Skyline Problem (M)
252. Meeting Rooms (M)
435. Non-overlapping Intervals (M)
1288. Remove Covered Intervals (M)
1834. Single-Threaded CPU (M) (PriorityQueue and maintain a curTime)
1094. Car Pooling (M) (Another way: bucket sort since we have constraint n < 1000)
- difference array 差分数组:
2381. Shifting Letters II  (M) ((start, end) +1 ->  transform to -> (start, n): + 1 && (end, n): - 1. diff[] -> prefixSum[])
1943. Describe the Painting (M) (No need to merge interval -> map instead of prefix array)

Array:
- Circle Array: (mod len)
539. Minimum Time Difference

Load Balancer Algorithm:
380. Insert Delete GetRandom O(1) (M) (Hint: HashMap<val, index>, ArrayList<index, val>. when remove, swap index to the last index)
381. Insert Delete GetRandom O(1) - Duplicates allowed (H) 
(Hint: HashMap<val, LinkedHashSet<index>>, ArrayList<index, val>. First ele: int index = this.map.get(val).iterator().next();)

Trie Tree:
2416. Sum of Prefix Scores of Strings (H)
1166. Design File System (M)
1032. Stream of Characters (H) (Hint: build and query the trie tree reversely)
1268. Search Suggestions System(M)
1948. Delete Duplicate Folders in System (H) (Hint: TrieTree(Prefix tree might also work) + Map<hash val, node> + PostOrder)
642. Design Search Autocomplete System (H) (continues working on the cur string and reset string)

Rolling Hash:
2156. Find Substring With Given Hash Value (H) (reverse)
1044. Longest Duplicate Substring (H) (Return String)
(Hint: BS + rolling hash/sliding window. long MOD = (long)1e9+7; Math.pow(2, 32) timeout. choose (long)1e9+7)
1062. Longest Repeating Substring (M) (BS. Return length, compared to 1044)
1698. Number of Distinct Substrings in a String (M) (Same as 1044. Handle Collision)
2223. Sum of Scores of Built Strings (H) (BS + rolling hash)
2168. Unique Substrings With Equal Digit Frequency(1698 + count array)
718. Maximum Length of Repeated Subarray(M) (BS + rolling hash. Find common substring. Give you arrays directly)
1923. Longest Common Subpath(H) (Same as 718. 718: two arrays. 1923: N arrays. Dweal with collision: double hash)
1392. Longest Happy Prefix (H) 
(Hint: Update from head: (hash1*a)%mod + nums[left]. Update from tail: (hash2 + (nums[right]*power)%mod)%mod)
1147. Longest Chunked Palindrome Decomposition(H) (Same as 1392)
1316. Distinct Echo Substrings (H) (Hint: rolling hash + prefix hash sum + handle collision)
214. Shortest Palindrome(H) 
(Hint: find the longest palindrome starting from index 0. palindrome calculates a hash from left equals to calculate a hash from the right.)
1554. Strings Differ by One Character (M) (Hint: change char to empty to see duplicate)

MST:
- Kruskal: (input : edges) (need to store all edges. instead of sort can use pq to store all edges)
1135. Connecting Cities With Minimum Cost (M+ MST => union find + rank)
- Prim: (input: nodes) (better choice when we have potential n^2 edges, no need to store n^2 edges)
1584. Min Cost to Connect All Points (PQ<edges> + visited[])

Union Find: (how to write find: array[x] = find(array[x]). Union: always use root)
928. Minimize Malware Spread II (H) (build the DSU for all node that not in the initial)
765. Couples Holding Hands (H)
839. Similar String Groups (label string to index. Can use Map or array for union find)
1101. The Earliest Moment When Everyone Become Friends (M. Union-find + size + rank(why performace worse by using rank))
2092. Find All People With Secret (H) (reset parent[i] = i for next round to use)
2157. Groups of Strings (H) 
(bitMask + union-find. BitMask 26 represent the string. union find on bitMask. use size to records repeat bitMask)
   Time Reverse:
   803. Bricks Falling When Hit (H) (2D)
   1970. Last Day Where You Can Still Cross (H) (row 0 union to n. last row union to n+1. 2-D union-find. 4 directions)
   Union in an order: (well should includes time reverse)
   2421. Number of Good Paths (H)

Quick Select: 
(find k-th in an array. Avg: O(n). shuffle + divide + partition. Do Worst-Case Linear Time: Median of Medians (No need ro understand).)
215.Kth-Largest-Element-in-an-Array (M) (QS)
347.Top-K-Frequent-Elements (M+) (Map + QS)
973.K-Closest-Points-to-Origin (M)
324.Wiggle-Sort-II (H)
1738. Find Kth Largest XOR Coordinate Value (M+) (2-D quick select. improve by Flatten)
1985.  Find the Kth Largest Integer in the Array(M+) (3-partition need to use in quick select)

Minimum-cost flow problem: 
2172. Maximum AND Sum of Array (H)

Kuhn-Munkres Algorithm: (Weighted Maximum Bipartite Graph Matching) 
2172. Maximum AND Sum of Array (H)

Two Pointers: (compared to bs logn, two  pointer using O(n) to narrow the search space)
2337. Move Pieces to Obtain a String (M) (L: target_index >= start_index, R: target_index <= start_Index)
859. Buddy Strings (E) (left, right p)
1793. Maximum Score of a Good Subarray (H) (Can use mono. but also can use greedy with two pointer)
- Enumeration: (fix right pointer, traverse left pointer)
2444. Count Subarrays With Fixed Bounds (H)
- Sliding window:
1234. Replace the Substring for Balanced String (M) 
- Sliding window : Distinct Characters:
076.Minimum-Window-Substring (M+)
003.Longest-Substring-Without-Repeating-Character (E+)
159.Longest-Substring-with-At-Most-Two-Distinct-Characters(H-)
340.Longest-Substring-with-At-Most-K-Distinct-Characters (H)
992.Subarrays-with-K-Different-Integers (H-) (same as 340. helper(k) - helper(k-1))

Radix Sort/Incremental sort: (counting sort + stable => radix sort)
2343. Query Kth Smallest Trimmed Number (M) 
           (Incremental sort from small k to large k. Since we use stable merge sort => O(qlogq+mnlogn) or O(qlogq+mn)radix_sort)
           (Radix sort: map[m][n]. List[] buckets = new LinkedList[10] sort each round. filled map)

Calculator I / II/ III
1. add +/-: record prev sign and cur number， calculate the all ele in stack
2. add */ : * or / stack top element in advance then push back
3. add () : => several stack -> substack -> stack of stack. 记得碰到(进入下一个stack 碰到）跳出来
4. TODO: non-recursive solution
